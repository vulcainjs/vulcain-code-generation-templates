//
// Code generated with apotek (https://github.com/malain/apotek)
// 

import React from 'react';
// eslint-disable-next-line
import * as aor from 'admin-on-rest';

const required = value => value ? undefined : 'Required';

<% Object.keys(state.schemas).forEach( schemaName => { 
    let schema = state.schemas[schemaName];
_%>
export const <%=schemaName%>List = (props) => (
    <aor.List title="<%=schemaName%> list" {...props}>
        <aor.Datagrid>
            <% for(let prop of schema.properties) { %>
            <%- getFieldComponent(prop) %>
            <% } %>
            <aor.EditButton/>
        </aor.Datagrid>
    </aor.List>
);

const <%=schemaName%>Title = ({ record }) => {
    return record.<%=schema.idProperty%> ? <span><%=schemaName%> {record ? `"${record.<%=schema.idProperty%>}"` : ''}</span> : <span><%=schemaName%></span>;
};

export const <%=schemaName%>Edit = (props) => (
    <aor.Edit title={<<%=schemaName%>Title />} {...props}>
        <aor.SimpleForm>
            <% for(let prop of schema.properties) { %>
            <%- getInputComponent(schema, prop,true) %>
            <% } %>
        </aor.SimpleForm>
    </aor.Edit>
);

export const <%=schemaName%>Create = (props) => (
    <aor.Create {...props}>
        <aor.SimpleForm>
            <%_ for(let prop of schema.properties) { %>
            <%- getInputComponent(schema, prop) %>
            <% } %>
        </aor.SimpleForm>
    </aor.Create>
);
<% }); %>